-- Enhanced Webhook Functions
local function sendWebhookWithRetry(data, retries)
    retries = retries or 0
    local success, response = pcall(function()
        return http_request({
            Url = config.webhookUrl,
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json',
            },
            Body = HttpService:JSONEncode(data),
        })
    end)
    if success and response.StatusCode == 204 then
        return true
    elseif retries < MAX_RETRIES then
        wait(RETRY_DELAY)
        return sendWebhookWithRetry(data, retries + 1)
    else
        warn('Failed to send webhook after', MAX_RETRIES, 'retries')
        return false
    end
end

local function createDiscordEmbed(foundPets, totalFinds, petDetails)
    local embeds = {}
    local currentEmbed = {
        title = 'üéØ **TARGET ACQUIRED!**',
        description = string.format('**%d Brainrot Pets Found!**', totalFinds),
        color = 16711935,
        fields = {
            {
                name = 'üìç **Location Info**',
                value = string.format(
                    '```lua\ngame:GetService("TeleportService"):TeleportToPlaceInstance(%d, "%s")\n```\nüë§ Players: %d',
                    PLACE_ID,
                    JOB_ID,
                    getPlayerCount()
                ),
                inline = false,
            },
        },
        footer = {
            text = string.format('üîç Session: %d scans | üìä Total finds: %d | üéØ Place ID: %s', sessionStats.scans, sessionStats.totalFinds, PLACE_ID),
        },
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
    }
    local fieldCount = 1 -- Start with 1 for the Location Info field

    -- Add pet details
    local petDetailsList = {}
    if petDetails and next(petDetails) then
        for _, entry in pairs(petDetails) do
            local info = entry.info
            local petText = string.format(
                "**%s** (x%d)\nüìä Gen: %s | üß¨ Mut: %s | üí∞ %s | üéñÔ∏è %s",
                info.DisplayName,
                entry.count,
                info.Generation,
                info.Mutation,
                info.Price,
                info.Rarity
            )
            table.insert(petDetailsList, {
                name = string.format('üêæ %s', info.DisplayName),
                value = petText,
                inline = true,
            })
        end
    end

    -- Add pet details to embeds, splitting if necessary
    for _, petField in ipairs(petDetailsList) do
        if fieldCount >= 25 then
            -- Start a new embed
            table.insert(embeds, currentEmbed)
            currentEmbed = {
                title = 'üéØ **TARGET ACQUIRED! (Continued)**',
                description = string.format('**%d Brainrot Pets Found (Continued)!**', totalFinds),
                color = 16711935,
                fields = {},
                footer = {
                    text = string.format('üîç Session: %d scans | üìä Total finds: %d | üéØ Place ID: %s', sessionStats.scans, sessionStats.totalFinds, PLACE_ID),
                },
                timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
            }
            fieldCount = 0
        end
        table.insert(currentEmbed.fields, petField)
        fieldCount = fieldCount + 1
    end

    -- Add the final embed
    table.insert(embeds, currentEmbed)

    return embeds
end

local function sendConsolidatedWebhook(foundPets, totalFinds, petDetails)
    if not config.webhookUrl or config.webhookUrl == '' or totalFinds == 0 then
        return
    end

    local embeds = createDiscordEmbed(foundPets, totalFinds, petDetails)

    local data = {
        content = string.format('üö® **Found %d pets!** üö®', totalFinds),
        embeds = embeds,
        username = 'Brainrot Hunter v2.1',
        avatar_url = 'https://cdn.discordapp.com/emojis/1234567890123456789.png',
    }

    spawn(function()
        local success = sendWebhookWithRetry(data)
        if success then
            Rayfield:Notify({
                Title = 'Webhook Sent',
                Content = string.format('Found %d pets reported to Discord with detailed info', totalFinds),
                Duration = 3,
                Image = 4483362458,
            })
        else
            Rayfield:Notify({
                Title = 'Webhook Failed',
                Content = 'Failed to send webhook after multiple retries',
                Duration = 5,
                Image = 4483362458,
            })
        end
    end)
end

return {
    sendConsolidatedWebhook = sendConsolidatedWebhook
}
